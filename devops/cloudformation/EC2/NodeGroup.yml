Parameters: 
  LinuxAmi: 
    Description: Ami id of linux instance
    Default: ami-087a82f6b78a07557
    Type: String
  AZ: 
    Description: Availability zone
    Default: us-east-1a
    Type: String
  Type: 
    Description: Instance type
    Default: t3.micro
    Type: String
  KeyName: 
    Description: Name of the key pair
    Default: test
    Type: String
  SharedNodeSgId: 
    Description: Security group id
    Type: "AWS::EC2::SecurityGroup::Id"
  NodeSgId: 
    Description: Security group id
    Type: "AWS::EC2::SecurityGroup::Id"
  PvtSubA: 
    Description: Private subnet id
    Type: "AWS::EC2::Subnet::Id"
  PvtSubB: 
    Description: Private subnet id
    Type: "AWS::EC2::Subnet::Id"
  IamRole: 
    Description: Iam role of node group
    Type: String
  UserData:
    Type: String
    Default: |
      #!/bin/bash 
      set -ex 
      B64_CLUSTER_CA=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01ESXhOVEUwTWpJeE1Wb1hEVE13TURJeE1qRTBNakl4TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTzhGCnUzTzVHQ0xKbkJCWXd0N0M4Sm8rcWFRUjVuM0F1RTVMb3hJY3p6RTdhQnJBbVZuenF1eXp0Y3k0MlVHRTF0YkEKZ0diOEpQb3lyZmo1WnYrR0hVYUJqemtpbVBqYlpXbWdFbGxscmIxRzZtcXo5ODFXQktIMGMyYm1Xd0lFenpmMQpvT2s5WnR5MGVTVENUWGw2WEhRUVV6eSt5UTM5dkt0ZTZQejBCSDFBdmwvaFV0NFVNWFE5NVdzazRyOEMrbmpkCkVQUEFGNHN0ZzZQa0tONEgxcVRuTTJKWmxibmJ0cSswbGpwcUxneEtwN0VYZldJQXhBRGVMTVlRQ1hYYkZobkwKZHNNYnUzWlB2RDlsbjErVW93d0QzczBlNTVuejQrSStYUFpLNU9lUnRtb2hyUDA1L3Jrd3VnOUVQbldJRUFmQwpOeTZ2T2lnNlZhejZUMXlLeWlzQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKK2RIa1hDVXhWTStNLzhic1g5cFlrR3I0WHcKRlZadnhiaTFndU9OdDNTRWtvbEJhWDFKZTJnOEg1ODFEUytjSVBJcmFzRmZ5NXRjTlk0dXo1RkxYazJrTmtrNQpLV3piQWRPTk1IUG80TytTQ1pRTmFjMXMzd0xjVjcxaGlzejhWTnZremdzUXY0YzVpTkdnMVZ6SHFtVTdqLzVsCjhMK0NObXBwS1FUNnRsTlFNVmlCQWRQK2N1VEtBZExDb3BQUDN0WTZUMmpnTmFmZ3l5OUovQ3BENmU0aFFINmMKS1M0L05qSVNjNjZEQ0xpNDh5M2pXcnR4OFRyTTllSkVxWW9oTzBJTTg1T3dCYnlOWktmclhuLzRNQWQ0dkFoZAorNTB3TmtwSTZiUXRkemtBR01aelBydXZSRjhkV2tnMzhvWE9xVlU2a3BxNkRVQ01CbzFjeHlsVkI3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= 
      API_SERVER_URL=https://FB5567E7DF63A5F80F49D7975882FDA1.gr7.us-east-1.eks.amazonaws.com 
      /etc/eks/bootstrap.sh TestCluster --kubelet-extra-args '--node-labels=eks.amazonaws.com/nodegroup=test,eks.amazonaws.com/nodegroup-image=ami-0392bafc801b7520f' --b64-cluster-ca $B64_CLUSTER_CA --apiserver-endpoint $API_SERVER_URL 

Resources:

  NodeGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: '1'
      LaunchTemplate:
        LaunchTemplateName: !Sub '${AWS::StackName}'
        Version: !GetAtt NodeGroupLaunchTemplate.LatestVersionNumber
      MaxSize: '3'
      MinSize: '1'
      Tags:
        - Key: Name
          PropagateAtLaunch: 'true'
          Value: TestCluster
        - Key: kubernetes.io/cluster/TestCluster
          PropagateAtLaunch: 'true'
          Value: owned
      VPCZoneIdentifier:
        - !Ref PvtSubA
        - !Ref PvtSubB
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: '1'
        MinInstancesInService: '0'

  NodeGroupLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 10
            VolumeType: gp2
            DeleteOnTermination: "true"
        IamInstanceProfile:
          Arn: !GetAtt NodeInstanceProfile.Arn
        ImageId: !Ref LinuxAmi
        InstanceType: !Ref Type
        KeyName: !Ref KeyName
        NetworkInterfaces:
          - AssociatePublicIpAddress: false
            DeviceIndex: 0
            Groups:
              - !Ref SharedNodeSgId
              - !Ref NodeSgId
        UserData: !Ref UserData
      LaunchTemplateName: !Sub '${AWS::StackName}'
  
  NodeInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref IamRole
